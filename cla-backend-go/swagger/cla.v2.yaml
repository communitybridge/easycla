# Copyright The Linux Foundation and each contributor to CommunityBridge.
# SPDX-License-Identifier: MIT
swagger: '2.0'
info:
  title: EasyCLA v2 API
  version: '2.0'
  x-logo:
    url: "https://www.linuxfoundation.org/wp-content/uploads/2017/06/LF_logo_NEW_H_W.png"
    backgroundColor: "#FFFFFF"
    altText: "The Linux Foundation - EasyCLA API"
basePath: /v4
securityDefinitions:
  lf-auth:
    type: apiKey
    name: X-ACL
    in: header
    description: Requires X-ACL headers and bearer token
security:
  - lf-auth: [ ]

schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /ops/version:
    get:
      summary: Returns the application version information
      description: Returns the version of the product
      security: [ ]
      operationId: getVersion
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/version'
      tags:
        - version

  /ops/health:
    get:
      summary: Returns the Health of the application
      description: Returns the health status
      security: [ ]
      operationId: healthCheck
      parameters:
        - $ref: "#/parameters/x-request-id"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/health'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '503':
          $ref: '#/responses/service-unavailable'
      tags:
        - health

  /api-docs:
    get:
      security: [ ]
      summary: API Documentation
      description: Endpoint to render the API documentation
      operationId: getDoc
      produces:
        - text/html
      responses:
        '200':
          description: Success
      tags:
        - docs

  /swagger.json:
    get:
      security: [ ]
      summary: Swagger specification as JSON
      description: Returns the Swagger specification as a JSON document
      operationId: getSwagger
      produces:
        - application/json
      responses:
        '200':
          description: Success
      tags:
        - docs

  /metrics/cla-manager-distribution:
    get:
      summary: Get CLA manager distribution for EasyCLA
      description: Returns CLA manager distribution
      operationId: getClaManagerDistribution
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/cla-manager-distribution'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - metrics

  /metrics/total-count:
    get:
      summary: Get total count metrics
      description: Returns total count metrics
      operationId: getTotalCount
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/total-count-metrics'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - metrics

  /metrics/company/{companyID}:
    get:
      summary: Get metrics of company
      description: Returns company metrics
      operationId: getCompanyMetric
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/path-companyID'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/company-metric'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - metrics

  /metrics/top-companies:
    get:
      summary: Get topi company metrics
      description: Returns list company metrics of top companies
      operationId: getTopCompanies
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/top-companies'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - metrics

  /metrics/top-projects:
    get:
      summary: Get project metrics of the top projects
      description: Returns list project metrics of top projects
      operationId: getTopProjects
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/top-projects'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - metrics

  /metrics/project/{projectID}:
    get:
      summary: Get metrics of project
      description: Returns project metrics
      operationId: getProjectMetric
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectID
          description: the project ID
          in: path
          type: string
          required: true
        - name: idType
          description: ID type
          in: query
          type: string
          enum:
            - salesforce
            - internal
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/sf-project-metric'
        '400':
          $ref: '#/responses/invalid-request'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - metrics

  /metrics/project:
    get:
      summary: List the metrics for the projects
      description: Returns list of project metrics
      operationId: listProjectMetrics
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/pageSize'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/list-project-metric'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - metrics

  /metrics/company/{companyID}/project/{projectSFID}:
    get:
      summary: List project metrics for a company
      description: Returns list of project metrics for company
      operationId: listCompanyProjectMetrics
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companyID"
        - $ref: "#/parameters/path-projectSFID"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/company-project-metrics'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - metrics

  # Cla group Service
  /cla-group:
    post:
      summary: Creates a new CLA Group
      description: Creates a new CLA Group
      operationId: createClaGroup
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: claGroupInput
          in: body
          schema:
            $ref: '#/definitions/create-cla-group-input'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/cla-group-summary'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
        '422':
          $ref: '#/responses/unprocessable-entity'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-group

  /cla-group/{claGroupID}:
    put:
      summary: Updates a CLA Group
      description: Updates CLA Group
      operationId: updateClaGroup
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - name: body
          in: body
          schema:
            $ref: '#/definitions/update-cla-group-input'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/cla-group-summary'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '409':
          $ref: '#/responses/conflict'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-group
    delete:
      summary: Deletes a CLA Group
      description: Deletes a CLA Group
      operationId: deleteClaGroup
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
      responses:
        '204':
          description: 'Resource Deleted'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-group

  /cla-group/{claGroupID}/enroll-projects:
    put:
      summary: Enroll projects in a CLA Group
      description: Enroll projects in a CLA Group
      operationId: enrollProjects
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - name: projectSFIDList
          in: body
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-group

  /cla-group/{claGroupID}/unenroll-projects:
    put:
      summary: Unenroll projects in a CLA Group
      description: Unenroll projects in a CLA Group
      operationId: unenrollProjects
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - name: projectSFIDList
          in: body
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-group

  /foundation/{projectSFID}/cla-groups:
    get:
      summary: List CLA Groups associated with a foundation or project
      description: Return list of CLA Groups associated with a group of projects (formerly a foundation) or project
      operationId: listClaGroupsUnderFoundation
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/cla-group-list-summary'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-group

  /foundation-mapping:
    get:
      summary: Get CLA Groups under a foundation
      description: Return list of all CLA Groups under foundation
      operationId: listFoundationClaGroups
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/foundationSFID"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/foundation-mapping-list'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - foundation

  /cla-group/validate:
    post:
      summary: Validates the CLA Group
      description: Validates the CLA Group provided input parameters
      operationId: validateClaGroup
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: validationInputRequest
          in: body
          schema:
            $ref: '#/definitions/cla-group-validation-request'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/cla-group-validation-response'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-group

  /project:
    put:
      summary: Update Project by ID
      description: Endpoint to update the project details
      operationId: updateProject
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: body
          in: body
          schema:
            $ref: '#/definitions/cla-group'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/cla-group'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - project
    get:
      summary: Get Projects
      description: Endpoint to fetch the project list
      operationId: getProjects
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/searchTerm'
        - $ref: '#/parameters/searchField'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/fullMatch'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/cla-groups'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - project

  /project/{projectSfdcId}:
    parameters:
      - name: projectSfdcId
        in: path
        type: string
        required: true
    get:
      summary: Get Project by ID
      description: Endpoint to fetch the project by ID
      operationId: getProjectById
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/cla-group'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - project
    delete:
      summary: Delete Project by ID
      description: Endpoint to delete the project by ID
      operationId: deleteProjectById
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '204':
          description: 'Resource Deleted'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - project

  /project/enabled/{foundationSFID}:
    get:
      summary: Get CLA enabled projects
      description: Returns a list of CLA enabled projects for a given foundation
      operationId: getCLAProjectsByID
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-foundationSFID"
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/pageSize'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/enabled-cla-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - project

  /project/external/{externalID}:
    get:
      summary: Get CLA Groups By SFDC ID
      description: Returns a list of CLA groups associated with the specified SFID ID
      operationId: getProjectsByExternalID
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: externalID
          in: path
          type: string
          required: true
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/pageSize'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/cla-groups'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - project

  /project/name/{projectName}:
    get:
      summary: Get Project By Name
      description: Returns the project object when provided the project name - exact match
      operationId: getProjectByName
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectName
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/cla-group'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - project

  # Pass-thru endpoint to fetch minimal ProjectSFID information/details - required by contributor console to determine
  # how to direct the user to the corporate console
  /project-info/{projectSFID}:
    get:
      summary: Get SF Project Info by ID
      description: Endpoint to fetch the SF Project information by ID
      operationId: getSFProjectInfoById
      parameters:
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/sf-project-summary'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - project

  /events/recent:
    get:
      summary: List recent events - requires Admin-level access
      description: Returns list of recent events
      operationId: getRecentEvents
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/pageSize'
      produces:
        - application/json
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/event-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - events

  /events/foundation/{foundationSFID}/csv:
    get:
      summary: Download all the events for the foundation as a CSV document
      description: Download all the events for the foundation as a CSV document
      operationId: getFoundationEventsAsCSV
      parameters:
        - $ref: "#/parameters/path-foundationSFID"
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      produces:
        - text/csv
      responses:
        '200':
          description: 'The events for the SFDC foundation as a CSV document'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - events

  /events/foundation/{foundationSFID}:
    get:
      summary: Get foundation events
      description: Returns events for the specified foundation
      operationId: getFoundationEvents
      parameters:
        - $ref: "#/parameters/path-foundationSFID"
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/searchTerm'
        - $ref: '#/parameters/returnAllEvents'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/event-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - events

  /events/project/{projectSFID}:
    get:
      summary: Get project events
      description: Returns events for the specified project
      operationId: getProjectEvents
      parameters:
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/searchTerm'
        - $ref: '#/parameters/returnAllEvents'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/event-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - events

  /events/project/{projectSFID}/csv:
    get:
      summary: Download all the events for the project as a CSV document
      description: Download all the events for the project as a CSV document
      operationId: getProjectEventsAsCSV
      parameters:
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      produces:
        - text/csv
      responses:
        '200':
          description: 'The events for the SFDC project as a CSV document'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - events

  /company/{companyID}/project/{projectSFID}/events:
    get:
      summary: Get recent events of company and project
      description: Returns list of events of company and project
      operationId: getCompanyProjectEvents
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/path-projectSFID'
        - $ref: '#/parameters/path-companyID'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/searchTerm'
        - $ref: '#/parameters/returnAllEvents'
      produces:
        - application/json
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/event-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - events

  /template:
    get:
      summary: Get templates
      description: Endpoint to return the list of available templates
      operationId: getTemplates
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            type: array
            items:
              $ref: '#/definitions/template'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - template

  /clagroup/{claGroupID}/template:
    post:
      summary: Create new templates for a CLA Group
      description: Endpoint to create the new templates for the specified CLA Group
      operationId: createCLAGroupTemplate
      parameters:
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - in: body
          name: body
          schema:
            $ref: '#/definitions/create-cla-group-template'
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/template-pdfs'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - template


  /template/preview:
    post:
      summary: Preview new templates for CLA Group
      description: Endpoint to preview the templates for the specified CLA Group
      operationId: templatePreview
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - in: query
          type: string
          name: template_for
          description: the template type to generate for the preview, either the Individual CLA template or the corporate CLA template
          required: true
          enum:
            - icla
            - ccla
        - in: body
          name: templatePreviewInput
          schema:
            $ref: '#/definitions/create-cla-group-template'
          required: true
      produces:
        - application/pdf
      responses:
        '200':
          description: 'A PDF file'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - template

  /template/{claGroupID}/preview:
    get:
      summary: Preview CLA Group Template PDF
      description: Get Template PDF for given CLA Group identifier with specified CLA type
      operationId: getCLATemplatePreview
      security: [ ]
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/templateCLAType"
        - in: query
          type: boolean
          name: watermark
          description: flag to indicate if the API should include a watermark in the generated PDF
          required: false
          default: false
      produces:
        - application/pdf
      responses:
        '200':
          description: 'A PDF File'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - template

  # ---------------------------------------------------------------------------
  # GitHub Endpoint Definitions
  # ---------------------------------------------------------------------------
  /project/{projectSFID}/github/organizations:
    post:
      summary: Add new GitHub Oranization in the project
      description: Endpoint to create the template preview for the CLA Group
      operationId: addProjectGithubOrganization
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/github-create-organization'
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/github-organization'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - github-organizations
    get:
      summary: Get the GitHub oranizations of the project
      description: Endpoint to return the list of GitHub organization for the project
      operationId: getProjectGithubOrganizations
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/project-github-organizations'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - github-organizations

  /project/{projectSFID}/github/organizations/{orgName}/config:
    put:
      summary: Update GitHub Organization Configuration
      description: Endpoint to adjust the GitHub Organization Configuration, such as toggling the auto-enable flag
      operationId: updateProjectGithubOrganizationConfig
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - name: orgName
          in: path
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/github-update-organization'
          required: true
      responses:
        '200':
          description: 'Resource Updated'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - github-organizations

  /project/{projectSFID}/github/organizations/{orgName}:
    delete:
      summary: Delete GitHub oranization in the project
      description: Endpoint to delete the GitHub organization for the project
      operationId: deleteProjectGithubOrganization
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - name: orgName
          in: path
          type: string
          required: true
      responses:
        '204':
          description: 'Updated Deleted'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - github-organizations

  /project/{projectSFID}/github/repositories:
    post:
      summary: Add a GitHub repository to the project
      description: Endpoint to add a GitHub repository for the project
      operationId: addProjectGithubRepository
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - in: body
          name: github-repository-input
          schema:
            $ref: '#/definitions/github-repository-input'
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/github-list-repositories'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '409':
          $ref: '#/responses/conflict'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - github-repositories
    get:
      summary: Get the GitHub repositories of the project
      description: Endpoint to fetch the list of GitHub repositories for the project
      operationId: getProjectGithubRepositories
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/github-list-repositories'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - github-repositories

  /project/{projectSFID}/github/repositories/{repositoryID}:
    delete:
      summary: Remove the GitHub repository from the project
      description: Endpoint to remove a GitHub repository from a project
      operationId: deleteProjectGithubRepository
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - name: repositoryID
          in: path
          type: string
          required: true
      responses:
        '204':
          description: 'Resource Deleted'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - github-repositories

  /project/{projectSFID}/github/repositories/{repositoryID}/branch-protection:
    post:
      summary: Update github branch protection for given repository
      description: Endpoint to set branch protection options for the given branch, defaults to repository's default branch
      operationId: updateProjectGithubRepositoryBranchProtection
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - name: repositoryID
          in: path
          type: string
          required: true
        - in: body
          name: github-repository-branch-protection-input
          schema:
            $ref: '#/definitions/github-repository-branch-protection-input'
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/github-repository-branch-protection'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - github-repositories

    get:
      summary: Get GitHub branch protection for given repository
      description: Endpoint to get branch protection options for the given branch, defaults to repository's default branch
      operationId: getProjectGithubRepositoryBranchProtection
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - name: repositoryID
          in: path
          type: string
          required: true
        - name: branchName
          in: query
          type: string
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/github-repository-branch-protection'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - github-repositories

  # ---------------------------------------------------------------------------
  # GitLab Endpoint Definitions
  # ---------------------------------------------------------------------------
  /project/{projectSFID}/gitlab/organizations:
    post:
      summary: Add new Gitlab Organization in the project
      description: Endpoint to create a new Gitlab Organization in EasyCLA
      operationId: addProjectGitlabOrganization
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/gitlab-create-organization'
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/gitlab-project-organizations'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '409':
          $ref: '#/responses/conflict'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gitlab-organizations
    get:
      summary: Get the Gitlab organizations of the project
      description: Endpoint to return the list of Gitlab organization for the project
      operationId: getProjectGitlabOrganizations
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/gitlab-project-organizations'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gitlab-organizations

  /project/{projectSFID}/gitlab/group/{gitLabGroupID}/config:
    put:
      summary: Update Gitlab Group/Organization Configuration
      description: Endpoint to adjust the Gitlab Group/Organization Configuration by GitLab Group ID
      operationId: updateProjectGitlabGroupConfig
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - name: gitLabGroupID
          in: path
          type: integer
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/gitlab-organization-update'
          required: true
      responses:
        '200':
          description: 'Resource Updated'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/gitlab-project-organizations'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - gitlab-organizations

  # /project/{projectSFID}/gitlab/organization?organization_full_path=linuxfoundation/product/test:
  /project/{projectSFID}/gitlab/organization:
    delete:
      summary: Delete Gitlab Group/Organization Configuration
      description: Endpoint to delete the Gitlab Group/Organization by Group ID
      operationId: deleteProjectGitlabGroupConfig
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - name: organization_full_path
          in: query
          type: string
          required: true
      responses:
        '204':
          description: 'Deleted'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - gitlab-organizations

  /project/{projectSFID}/gitlab/repositories:
    put:
      summary: Enrolls/Unenrolls GitLab repositories for the CLA Group
      description: Endpoint to enroll or unenroll GitLab repositories for the CLA Group
      operationId: enrollGitLabRepository
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
        - in: body
          name: gitlab-repositories-enroll
          schema:
            $ref: '#/definitions/gitlab-repositories-enroll'
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/gitlab-repositories-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gitlab-repositories
    get:
      summary: Get the GitLab repositories of the project
      description: Endpoint to fetch the list of GitLab repositories for the project
      operationId: getProjectGitLabRepositories
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: projectSFID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/gitlab-repositories-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gitlab-repositories
  
  /gitlab/group/{gitLabGroupID}/members:
    get:
      summary: List members of a given GitLab group
      description: Endpoint that returs the list of GitLab organization members
      operationId: getGitLabGroupMembers
      security: []
      parameters:
        - $ref: "#/parameters/x-request-id"
        - name: gitLabGroupID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/gitlab-group-members-list'
        '400':
          $ref: '#/responses/invalid-request'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - gitlab-organizations
          
  /cla-group/{claGroupID}/icla/signatures:
    get:
      summary: List individual signatures for CLA Group
      description: Returns a list of individual signatures for a CLA Group
      operationId: listClaGroupIclaSignature
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: '#/parameters/searchTerm'
        - $ref: '#/parameters/sortOrder'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/approved'
        - $ref: '#/parameters/signed'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/icla-signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /cla-group/{claGroupID}/corporate-contributors:
    get:
      summary: List corporate contributors
      description: Returns a list of corporate contributor for the CLA Group
      operationId: listClaGroupCorporateContributors
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/companyID"
        - $ref: '#/parameters/searchTerm'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/corporate-contributor-list'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/id/{signatureID}:
    get:
      summary: Get the signature by ID
      description: Returns the signature when provided the signature ID
      operationId: getSignature
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: signatureID
          description: the signature ID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/signature'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/{signatureID}/signed-document:
    get:
      summary: Get signed document for the signature
      description: Returns the signature signed document when provided the signature ID
      operationId: getSignatureSignedDocument
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: signatureID
          description: the signature ID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/signed_document'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{claGroupID}:
    get:
      summary: Get project signatures
      description: Returns a list of project signature models when provided the project ID
      operationId: getProjectSignatures
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/searchTerm'
        - $ref: '#/parameters/searchField'
        - $ref: '#/parameters/fullMatch'
        - $ref: '#/parameters/signatureType'
        - $ref: '#/parameters/claType'
        - $ref: '#/parameters/sortOrder'
        - $ref: '#/parameters/signed'
        - $ref: '#/parameters/approved'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  # --------------------------------------------------------
  # Individual CLA Endpoints - PDF, CSV, Zip Download
  # --------------------------------------------------------
  /signatures/project/{claGroupID}/icla/pdfs:
    get:
      summary: Downloads all ICLAs for this project
      description: Downloads the ICLAs for this project
      operationId: downloadProjectSignatureICLAs
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
      produces:
        - application/json
      responses:
        '200':
          description: 'The CLA Group ICLAs as a zip'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/url-object'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{claGroupID}/icla/csv:
    get:
      summary: Downloads all ICLA information as a CSV document for this project
      description: Downloads the ICLA information as a CSV document for this project
      operationId: downloadProjectSignatureICLAAsCSV
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
      produces:
        - text/json
        - text/csv
      responses:
        '200':
          description: 'The CLA Group ICLAs as a CSV file'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{claGroupID}/icla/{signatureID}/pdf:
    get:
      summary: Downloads the user's ICLA for this project
      description: Downloads the user's ICLA for this project
      operationId: downloadProjectSignatureICLA
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-signatureID"
      produces:
        - application/pdf
      responses:
        '200':
          description: "The user's ICLA as a PDF document"
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  # --------------------------------------------------------
  # Corporate CLA Endpoints - PDF, CSV, Zip Download
  # --------------------------------------------------------
  /signatures/project/{claGroupID}/ccla/pdfs:
    get:
      summary: Download corporate CLAs
      description: Downloads all the corporate CLAs for this project
      operationId: downloadProjectSignatureCCLAs
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
      produces:
        - application/json
      responses:
        '200':
          description: 'The CLA Group CCLAs as a zip'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/url-object'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{claGroupID}/ccla/csv:
    get:
      summary: Downloads all coporate CLA information as a CSV document for this project
      description: Downloads the corporate CLA information as a CSV document for this project
      operationId: downloadProjectSignatureCCLAAsCSV
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
      produces:
        - text/csv
        - application/json
      responses:
        '200':
          description: 'The CLA Group corporate CLAs as a CSV file'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{claGroupID}/ccla/{signatureID}/pdf:
    get:
      summary: Downloads the corporate CLA for this project
      description: Downloads the corporate CLA for this project
      operationId: downloadProjectSignatureCorporateCLA
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-signatureID"
      produces:
        - application/pdf
      responses:
        '200':
          description: 'The corporate CLA as a PDF document'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  # --------------------------------------------------------
  # Employee CLA Endpoints - CSV Report Download
  # --------------------------------------------------------
  /signatures/project/{claGroupID}/company/{companyID}/employee/csv:
    get:
      summary: Downloads all employee CLA information as a CSV document for this project
      description: Downloads the employee CLA information as a CSV document for this project
      operationId: downloadProjectSignatureEmployeeAsCSV
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-companyID"
      produces:
        - text/json
        - text/csv
      responses:
        '200':
          description: "The CLA Group employee CLA's as a CSV file"
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '404':
          $ref: '#/responses/not-found'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{projectSFID}/company/{companyID}:
    get:
      summary: Get project company ccla signatures
      description: Returns a list of ccla signature models when provided the project ID and company ID
      operationId: getProjectCompanySignatures
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/path-companyID"
        - $ref: '#/parameters/sortOrder'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/corporate-signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/company/{companyID}:
    get:
      summary: Get company signatures
      description: Returns a list of company signatures when provided the company ID
      operationId: getCompanySignatures
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/path-companyID'
        - $ref: '#/parameters/signatureType'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/companyName'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/user/{userID}:
    get:
      summary: Get user signatures
      description: Returns a list of user signatures when provided the user ID
      operationId: getUserSignatures
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: userID
          description: the user ID
          in: path
          type: string
          required: true
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/userName'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{projectSFID}/company/{companyID}/employee:
    get:
      summary: Get project company signatures for the employees
      description: Returns a list of employee project signature models when provided the project ID and company ID
      operationId: getProjectCompanyEmployeeSignatures
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/path-companyID"
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/sortOrder'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/signatures'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /signatures/project/{projectSFID}/company/{companyID}/clagroup/{claGroupID}/approval-list:
    put:
      summary: Updates the Project / Organization/Company Approval list
      description: API to update the project and organization/company approval list.
      operationId: updateApprovalList
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/path-companyID"
        - name: claGroupID
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/approval-list'
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/signature'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /company/{companySFID}/user/{userLFID}/claGroupID/{claGroupID}/is-cla-manager-designee:
    get:
      summary: Checks cla-manager-designee role
      description: Checks if user has cla-manager designee role for associaeted salesforce projects
      operationId: isCLAManagerDesignee
      security: [ ]
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/path-userLFID"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-companySFID"
      responses:
        "200":
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/user-role-status'
        "400":
          $ref: '#/responses/invalid-request'
        "404":
          $ref: '#/responses/not-found'
      tags:
        - cla-manager

  /signatures/company/{companyID}/clagroup/{claGroupID}/ecla-auto-create:
    put:
      summary: Updates CCLA signature record for the auto_create_ecla flag.
      description: Updates CCLA signature record for the auto_create_ecla flag.
      operationId: eclaAutoCreate
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companyID"
        - name: claGroupID
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ecla-auto-create'
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/signature'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures
  /notify-cla-managers:
    post:
      summary: Send Notification to CLA Managaers
      description: Send Notification to selected list of CLA Managers
      security: [ ]
      operationId: notifyCLAManagers
      parameters:
        - $ref: "#/parameters/x-request-id"
        - name: body
          in: body
          schema:
            $ref: '#/definitions/notify-cla-manager-list'
          required: true
      responses:
        '204':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '404':
          $ref: '#/responses/not-found'
        '400':
          $ref: '#/responses/invalid-request'
      tags:
        - cla-manager

  /user/{userID}/invite-company-admin:
    post:
      summary: Invite Manager
      description: Invite Company Admin based on user request to sign CLA
      security: [ ]
      operationId: inviteCompanyAdmin
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/path-userID"
        - name: body
          in: body
          schema:
            type: object
            required:
              - claGroupID
            x-nullable: false
            title: CLA Manager Designee
            properties:
              contactAdmin:
                description: flag checking whether to contact company admin
                type: boolean
              companyID:
                description: EasyCLA companyID of contributor inviting CLA Manager
                type: string
              claGroupID:
                description: claGroupID to be signed
                type: string
              userEmail:
                $ref: './common/properties/email.yaml'
                description: Proposed CLA Manager email
              name:
                type: string
                description: Proposed CLA Manager name
                example: "Harold Wanyama"
                pattern: "^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z.]*)*$"
                minLength: 1
                maxLength: 60
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/cla-manager-designees'
        '202':
          $ref: '#/responses/accepted-request'
        '204':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway
                based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - cla-manager

  /user-from-token:
    get:
      summary: Get user object from current bearer token
      description: Get user object from current bearer token
      operationId: getUserFromToken
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/user'
        '400':
          $ref: '#/responses/invalid-request'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - current_user

  /user/{userID}/request-company-admin:
    post:
      summary: Request Manager
      description: Request Company Admin based on user request to sign CLA
      security: [ ]
      operationId: requestCompanyAdmin
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/path-userID"
        - name: body
          in: body
          schema:
            type: object
            required:
              - claManagerEmail
            x-nullable: false
            properties:
              version:
                type: string
                description: EasyCLA Version (v1|v2)
                example: "v1"
              contributorName:
                type: string
                description: Proposed Contributor name
                example: "Harold Wanyama"
                pattern: "^[a-zA-Z0-9]+(([',. -][0-9a-zA-Z ])?[0-9a-zA-Z]*)*$"
                minLength: 1
                maxLength: 60
              contributorEmail:
                $ref: './common/properties/email.yaml'
                description: Proposed Contributor email
              claManagerName:
                type: string
                description: Proposed Cla Manager name
                example: "Rinkesh Bhutwala"
                pattern: "^[a-zA-Z0-9]+(([',. -][0-9a-zA-Z ])?[0-9a-zA-Z]*)*$"
                minLength: 1
                maxLength: 60
              claManagerEmail:
                $ref: './common/properties/email.yaml'
                description: Proposed Cla Manager email
              projectName:
                $ref: './common/properties/cla-group-name.yaml'
              companyName:
                $ref: './common/properties/company-name.yaml'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '202':
          $ref: '#/responses/accepted-request'
        '204':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway
                based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - company

  /company/{companyID}/project/{projectSFID}/cla-manager/requests:
    post:
      summary: Adds a CLA Manager Designee to the specified Company and Project
      description: User proposes a CLA Manager making the proposed user CLA Manager Designee
      operationId: createCLAManagerRequest
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companyID"
        - $ref: "#/parameters/path-projectSFID"
        - name: body
          in: body
          schema:
            type: object
            x-nullable: false
            title: CLA Manager Designee User
            description: User object used for CLA Manager requests
            required:
              - fullName
            properties:
              fullName:
                type: string
                pattern: '^[a-zA-Z0-9_]+( [a-zA-Z0-9_]+)*$'
                minLength: 2
                maxLength: 60
              userEmail:
                $ref: './common/properties/email.yaml'
                description: CLA Manager Designee email
              contactAdmin:
                type: boolean
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: "#/definitions/cla-manager-designee"
        '202':
          $ref: '#/responses/accepted-request'
        '204':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway
                based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '404':
          $ref: '#/responses/not-found'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - cla-manager


  /company/{companyID}/project/{projectSFID}/cla-manager:
    post:
      summary: Adds a new CLA Manager to the specified Company and Project
      description: Allows an existing CLA Manager to add another CLA Manager to the specified Company and Project.
      operationId: createCLAManager
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/path-companyID"
        - name: body
          in: body
          schema:
            $ref: '#/definitions/cla-manager-user'
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/company-cla-manager'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - cla-manager

  /company/{companySFID}/contributorAssociation:
    post:
      summary: Associates a contributor with a company
      description: Associates a contributor with a company
      security: [ ]
      operationId: contributorAssociation
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/path-companySFID"
        - name: body
          in: body
          schema:
            type: object
            x-nullable: false
            title: Contributor
            properties:
              userEmail:
                $ref: './common/properties/email.yaml'
                description: LfEmail for contributor getting associated

      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/contributor'
        '400':
          $ref: '#/responses/invalid-request'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - company

  /company/{companyID}/project/{projectSFID}/cla-manager/{userLFID}:
    delete:
      summary: Deletes the CLA Manager from CLA Manager list for specified Company and Project
      description: Allows an existing CLA Manager to remove another CLA Manager from the specified Company and Project.
      operationId: deleteCLAManager
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/path-companyID"
        - $ref: "#/parameters/path-userLFID"
      responses:
        '204':
          description: 'Resource Deleted'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - cla-manager

  /company/{companyID}/claGroup/{claGroupID}/cla-manager-designee:
    post:
      summary: Assigns CLA Manager designee
      description: Assigns CLA Manager designee to a given user
      operationId: createCLAManagerDesigneeByGroup
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-companyID"
        - name: body
          in: body
          schema:
            type: object
            x-nullable: false
            title: CLA Manager Designee
            description: User object used for CLA Manager designee
            properties:
              userEmail:
                $ref: './common/properties/email.yaml'
                description: 'CLA Manager designee email address'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/cla-manager-designees'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - cla-manager

  /company/{companyID}/project/{projectSFID}/cla-manager-designee:
    post:
      summary: Assigns CLA Manager designee
      description: Assigns CLA Manager designee to a given user
      operationId: createCLAManagerDesignee
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/path-companyID"
        - name: body
          in: body
          schema:
            type: object
            x-nullable: false
            title: CLA Manager designee
            description: User object used for CLA Manager designee
            properties:
              userEmail:
                $ref: './common/properties/email.yaml'
                description: 'CLA Manager designee email address'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/cla-manager-designee'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - cla-manager

  /signatures/{signatureID}/gh-org-whitelist:
    get:
      summary: Signature Update
      description: Updates the specified signature GitHub Organization approval list
      operationId: getGitHubOrgWhitelist
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: signatureID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            type: array
            items:
              $ref: '#/definitions/github-org'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures
    delete:
      summary: Signature Delete
      description: Deletes the specified signature GitHub organization approval list
      operationId: deleteGitHubOrgWhitelist
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: signatureID
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/gh-org-whitelist'
      responses:
        '204':
          description: 'Resource Deleted'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            type: array
            items:
              $ref: '#/definitions/github-org'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures
    post:
      summary: Signature Update
      description: Updates the specified signature GitHub organization approval list
      operationId: addGitHubOrgWhitelist
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: signatureID
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/gh-org-whitelist'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            type: array
            items:
              $ref: '#/definitions/github-org'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /gerrit/repos:
    get:
      summary: Get Gerrit Repositories
      description: Returns a list of repositories under the specified gerrit instance
      operationId: getGerritRepos
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/gerritHost"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/gerrit-repo-list'
        '400':
          $ref: '#/responses/invalid-request'
        '404':
          $ref: '#/responses/not-found'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gerrits

  /cla-group/{claGroupID}/project/{projectSFID}/gerrits/{gerritID}:
    delete:
      summary: Delete the gerrit
      description: Delete the gerrit instance for the project
      operationId: deleteGerrit
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/path-claGroupID"
        - name: gerritID
          in: path
          type: string
          required: true
      responses:
        '204':
          description: 'Resource Deleted'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '404':
          $ref: '#/responses/not-found'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gerrits

  /cla-group/{claGroupID}/project/{projectSFID}/gerrits:
    get:
      summary: Get the gerrits for project and cla-group
      description: Get the gerrit instance list for the project and cla-group
      operationId: ListGerrits
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-projectSFID"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/gerrit-list'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gerrits
    post:
      summary: Add the gerrit
      description: Adds the gerrit instance for the project
      operationId: addGerrit
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-projectSFID"
        - in: body
          name: add-gerrit-input
          schema:
            $ref: '#/definitions/add-gerrit-input'
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/gerrit'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gerrits

  # /cla-group/{claGroupID}/project/{projectSFID}/gerrits/icla/user:
  #   get:
  #     summary: Get Gerrit ICLA Users
  #     description: Gets the authorized individual CLA users from a gerrit instance for the CLA Group/Projecct
  #     operationId: getGerritICLAUser
  #     parameters:
  #       - $ref: "#/parameters/x-request-id"
  #       - $ref: "#/parameters/x-acl"
  #       - $ref: "#/parameters/x-username"
  #       - $ref: "#/parameters/x-email"
  #       - $ref: "#/parameters/path-claGroupID"
  #       - $ref: "#/parameters/path-projectSFID"
  #     responses:
  #       '200':
  #         description: 'Success'
  #         headers:
  #           x-request-id:
  #             type: string
  #             description: The unique request ID value - assigned/set by the API Gateway based on the session
  #         schema:
  #           $ref: '#/definitions/gerrit-group-response'
  #       '400':
  #         $ref: '#/responses/invalid-request'
  #       '403':
  #         $ref: '#/responses/forbidden'
  #       '409':
  #         $ref: '#/responses/conflict'
  #       '500':
  #         $ref: '#/responses/internal-server-error'
  #     tags:
  #       - gerrits
    # put:
    #   summary: Add Gerrit ICLA Users
    #   description: Adds one or more individual CLA users to the gerrit CLA Group/project
    #   operationId: addGerritICLAUser
    #   parameters:
    #     - $ref: "#/parameters/x-request-id"
    #     - $ref: "#/parameters/x-acl"
    #     - $ref: "#/parameters/x-username"
    #     - $ref: "#/parameters/x-email"
    #     - $ref: "#/parameters/path-claGroupID"
    #     - $ref: "#/parameters/path-projectSFID"
    #     - in: body
    #       name: add-gerrit-user-input
    #       schema:
    #         $ref: '#/definitions/add-gerrit-user-input'
    #       required: true
    #   responses:
    #     '200':
    #       description: 'Success'
    #       headers:
    #         x-request-id:
    #           type: string
    #           description: The unique request ID value - assigned/set by the API Gateway based on the session
    #     '400':
    #       $ref: '#/responses/invalid-request'
    #     '403':
    #       $ref: '#/responses/forbidden'
    #     '409':
    #       $ref: '#/responses/conflict'
    #     '500':
    #       $ref: '#/responses/internal-server-error'
    #   tags:
    #     - gerrits
    # delete:
    #   summary: Remove Gerrit ICLA Users
    #   description: Removes one or more individual CLA users from a gerrit instance for the CLA Group/Project
    #   operationId: removeGerritICLAUser
    #   parameters:
    #     - $ref: "#/parameters/x-request-id"
    #     - $ref: "#/parameters/x-acl"
    #     - $ref: "#/parameters/x-username"
    #     - $ref: "#/parameters/x-email"
    #     - $ref: "#/parameters/path-claGroupID"
    #     - $ref: "#/parameters/path-projectSFID"
    #     - in: body
    #       name: remove-gerrit-user-input
    #       schema:
    #         $ref: '#/definitions/remove-gerrit-user-input'
    #       required: true
    #   responses:
    #     '200':
    #       description: 'Success'
    #       headers:
    #         x-request-id:
    #           type: string
    #           description: The unique request ID value - assigned/set by the API Gateway based on the session
    #     '400':
    #       $ref: '#/responses/invalid-request'
    #     '403':
    #       $ref: '#/responses/forbidden'
    #     '409':
    #       $ref: '#/responses/conflict'
    #     '500':
    #       $ref: '#/responses/internal-server-error'
    #   tags:
    #     - gerrits

  # /cla-group/{claGroupID}/project/{projectSFID}/gerrits/ecla/user:
  #   get:
  #     summary: Get Gerrit ECLA Users
  #     description: Gets the authorized employee CLA users from a gerrit instance for the CLA Group/Projecct
  #     operationId: getGerritECLAUser
  #     parameters:
  #       - $ref: "#/parameters/x-request-id"
  #       - $ref: "#/parameters/x-acl"
  #       - $ref: "#/parameters/x-username"
  #       - $ref: "#/parameters/x-email"
  #       - $ref: "#/parameters/path-claGroupID"
  #       - $ref: "#/parameters/path-projectSFID"
  #     responses:
  #       '200':
  #         description: 'Success'
  #         headers:
  #           x-request-id:
  #             type: string
  #             description: The unique request ID value - assigned/set by the API Gateway based on the session
  #         schema:
  #           $ref: '#/definitions/gerrit-group-response'
  #       '400':
  #         $ref: '#/responses/invalid-request'
  #       '403':
  #         $ref: '#/responses/forbidden'
  #       '409':
  #         $ref: '#/responses/conflict'
  #       '500':
  #         $ref: '#/responses/internal-server-error'
  #     tags:
  #       - gerrits
    # put:
    #   summary: Add Gerrit ECLA Users
    #   description: Adds one or more employee CLA users to a gerrit instance for the CLA Group/Project
    #   operationId: addGerritECLAUser
    #   parameters:
    #     - $ref: "#/parameters/x-request-id"
    #     - $ref: "#/parameters/x-acl"
    #     - $ref: "#/parameters/x-username"
    #     - $ref: "#/parameters/x-email"
    #     - $ref: "#/parameters/path-claGroupID"
    #     - $ref: "#/parameters/path-projectSFID"
    #     - in: body
    #       name: add-gerrit-user-input
    #       schema:
    #         $ref: '#/definitions/add-gerrit-user-input'
    #       required: true
    #   responses:
    #     '200':
    #       description: 'Success'
    #       headers:
    #         x-request-id:
    #           type: string
    #           description: The unique request ID value - assigned/set by the API Gateway based on the session
    #     '400':
    #       $ref: '#/responses/invalid-request'
    #     '403':
    #       $ref: '#/responses/forbidden'
    #     '409':
    #       $ref: '#/responses/conflict'
    #     '500':
    #       $ref: '#/responses/internal-server-error'
    #   tags:
    #     - gerrits
    # delete:
    #   summary: Remove Gerrit ECLA Users
    #   description: Removes one or more employee CLA users from a gerrit instance for the project
    #   operationId: removeGerritECLAUser
    #   parameters:
    #     - $ref: "#/parameters/x-request-id"
    #     - $ref: "#/parameters/x-acl"
    #     - $ref: "#/parameters/x-username"
    #     - $ref: "#/parameters/x-email"
    #     - $ref: "#/parameters/path-claGroupID"
    #     - $ref: "#/parameters/path-projectSFID"
    #     - in: body
    #       name: remove-gerrit-user-input
    #       schema:
    #         $ref: '#/definitions/remove-gerrit-user-input'
    #       required: true
    #   responses:
    #     '200':
    #       description: 'Success'
    #       headers:
    #         x-request-id:
    #           type: string
    #           description: The unique request ID value - assigned/set by the API Gateway based on the session
    #     '400':
    #       $ref: '#/responses/invalid-request'
    #     '403':
    #       $ref: '#/responses/forbidden'
    #     '409':
    #       $ref: '#/responses/conflict'
    #     '500':
    #       $ref: '#/responses/internal-server-error'
      # tags:
      #   - gerrits
  /cla-group/{claGroupID}/user/{userID}/icla:
    put:
      summary: Invalidate ICLA record
      description: Invalidates a given ICLA record for a user
      operationId: invalidateICLA
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/path-claGroupID"
        - $ref: "#/parameters/path-userID"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '409':
          $ref: '#/responses/conflict'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - signatures

  /company/{companyID}:
    get:
      summary: Get Company By Internal ID
      description: Returns the company by internal ID
      operationId: getCompanyByInternalID
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companyID"
      produces:
        - application/json
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/company'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /company/external/{companySFID}:
    get:
      summary: Get Company by External SFID
      description: Returns the company by external ID
      operationId: getCompanyByExternalID
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: companySFID
          in: path
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/company'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /company/name/{companyName}:
    get:
      summary: Gets the company by name
      description: Returns the matching company by name
      operationId: getCompanyByName
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/path-companyName'
      produces:
        - application/json
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/company'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - company

  /company/entityname/{signingEntityName}:
    get:
      summary: Gets the company by signing entity namename
      description: Returns the matching company by signing entity name
      operationId: getCompanyBySigningEntityName
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/path-signingEntityName'
      produces:
        - application/json
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/company'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - company

  /company/id/{companyID}:
    delete:
      summary: Deletes the company by ID
      description: Deletes the company by ID
      operationId: deleteCompanyByID
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/path-companyID'
      produces:
        - application/json
      responses:
        '204':
          description: 'Resource Deleted'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - company

  /company/lookup:
    get:
      summary: Search companies from organization service
      description: >-
        Returns an organization whether it exists in the system or not. You must pass either a domain or name as query parameters. If any organization
        in salesforce matches the domain or name, or both if given, it will be returned along with the salesforceID. If there are no results, the given
        domain or name will be searched for clearbit and the first hit will be returned with a value of "clearbit" for Source in the response. If both
        domain and name are given, domain take precedence.
      security: [ ]
      operationId: searchCompanyLookup
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: '#/parameters/companyName'
        - name: websiteName
          in: query
          type: string
          description: the company website
          x-omitempty: false
          pattern: "^((http|https):\\/\\/)?(www.)?[a-zA-Z0-9]+(\\.[a-zA-Z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/lookup'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - company

  /company/sfid/{companySFID}:
    delete:
      summary: Deletes the company by the SFID
      description: Deletes the company by the SFID
      operationId: deleteCompanyBySFID
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: '#/parameters/path-companySFID'
      produces:
        - application/json
      responses:
        '204':
          description: 'Resource Deleted'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - company

  /company/{companyID}/project/{projectSFID}/cla-managers:
    get:
      summary: Get CLA manager of company for particular project/foundation
      description: Returns list CLA managers of the company for project/foundation
      operationId: getCompanyProjectClaManagers
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companyID"
        - $ref: "#/parameters/path-projectSFID"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/company-cla-managers'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /company/{companyID}/cla-group/{claGroupID}/cla-managers:
    get:
      summary: Get list of CLA managers based on the CLA Group and v1 Company ID
      description: Returns a list of current CLA managers based on the CLA Group ID and the v1 Company ID
      operationId: getCompanyCLAGroupManagers
      security: [ ]
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/path-companyID"
        - $ref: "#/parameters/path-claGroupID"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/company-cla-managers'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /company/{companyID}/project/{projectSFID}/active-cla-list:
    get:
      summary: Get active CLA list of company for particular project/foundation
      description: Returns list active CLA of the company under particular project/foundation
      operationId: getCompanyProjectActiveCla
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companyID"
        - $ref: "#/parameters/path-projectSFID"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/active-cla-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /company/{companyID}/project/{projectSFID}/contributors:
    get:
      summary: Get corporate contributors for project
      description: Returns list of corporate contributors for project
      operationId: getCompanyProjectContributors
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companyID"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/searchTerm"
        - $ref: '#/parameters/nextKey'
        - $ref: '#/parameters/pageSize'
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/corporate-contributor-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /company/{companySFID}/admin:
    get:
      summary: Returns a list of Company Admins (salesforce)
      operationId: getCompanyAdmins
      security: [ ]
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/path-companySFID"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/company-admin-list'
        '400':
          $ref: '#/responses/invalid-request'
      tags:
        - company

  /company/{companySFID}/project/{projectSFID}/cla:
    get:
      summary: Returns the CLA Groups associated with the Project and Company
      operationId: getCompanyProjectCla
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - $ref: "#/parameters/path-companySFID"
        - $ref: "#/parameters/path-projectSFID"
        - $ref: "#/parameters/companyID"
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/company-project-cla-list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - company

  /user/{userID}/company:
    post:
      summary: Creates a new salesforce company
      description: Creates a new salesforce company
      security: [ ]
      operationId: createCompany
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/path-userID"
        - name: input
          in: body
          schema:
            $ref: '#/definitions/company-input'
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/company-output'
        '400':
          $ref: '#/responses/invalid-request'
        '409':
          $ref: '#/responses/conflict'
        '422':
          $ref: '#/responses/unprocessable-entity'
      tags:
        - company

  /request-corporate-signature:
    post:
      summary: Requests and generates a new Corporate Signature
      description: Creates a new signature given project and company IDs. The manager will be redirected to the
        return_url once signature is complete.
      operationId: requestCorporateSignature
      parameters:
        - $ref: "#/parameters/authorization"
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-acl"
        - $ref: "#/parameters/x-username"
        - $ref: "#/parameters/x-email"
        - name: input
          in: body
          schema:
            $ref: '#/definitions/corporate-signature-input'
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/corporate-signature-output'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
        '409':
          $ref: '#/responses/conflict'
      tags:
        - sign

  /github/activity:
    post:
      summary: GitHub Activity Callback Handler
      description: GitHub Activity Callback Handler reacts to GitHub events emmited.
      security: [ ]
      operationId: githubActivity
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-github-event"
        - $ref: "#/parameters/x-hub-signature"
        - name: githubActivityInput
          in: body
          schema:
            $ref: '#/definitions/github-activity-input'
      responses:
        '200':
          description: 'Success'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - github-activity

  /gitlab/oauth/callback:
    get:
      summary: The endpoint is called after user authorizes EasyCLA bot
      description: The endpoint is responsible for storing the access token for the user and registering the webhooks is autoenable is on
      security: [ ]
      operationId: gitlabOauthCallback
      parameters:
        - name: code
          description: oauth code used to fetch the access token
          in: query
          type: string
        - name: state
          description: state is used to find the gitlab organization
          in: query
          type: string
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/success-response'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gitlab-activity
  
  /gitlab/user/oauth/callback:
    get:
      summary: The endpoint is called after user is authorized for the sign flow
      description: The endpoint handles storing the OAuth2 session information for this user and initiate the signing workflow
      security: [ ]
      operationId: gitlabUserOauthCallback
      parameters:
        - $ref: "#/parameters/x-request-id"
        - name: code
          description: oauth code used to fetch the access token
          in: query
          type: string
          required: true
        - name: state
          description: state is used to find the gitlab user
          in: query
          type: string
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/success-response'
        '400':
          $ref: '#/responses/invalid-request'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gitlab-activity
      
  /gitlab/activity:
    post:
      summary: Gitlab Activity Callback Handler
      description: Gitlab Activity Callback Handler reacts to Gitlab events emmited.
      security: [ ]
      operationId: gitlabActivity
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/x-gitlab-token"
        - name: gitlabActivityInput
          in: body
          schema:
            $ref: '#/definitions/gitlab-activity-input'
      responses:
        '200':
          description: 'Success'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gitlab-activity

  /gitlab/trigger:
    post:
      summary: Gitlab Activity MR Trigger
      description: Endpoint is used to trigger specific MR for gitlab
      security: [ ]
      operationId: gitlabTrigger
      parameters:
        - $ref: "#/parameters/x-request-id"
        - name: gitlabTriggerInput
          in: body
          schema:
            $ref: '#/definitions/gitlab-trigger-input'
      responses:
        '200':
          description: 'Success'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gitlab-activity


  /repository-provider/gitlab/sign/{organizationID}/{gitlabRepositoryID}/{mergeRequestID}:
    get:
      summary: Gitlab sign request handler
      description: Endpoint that will initiate a CLA Signature for the User
      security: [ ]
      operationId: signRequest
      parameters:
        - $ref: "#/parameters/x-request-id"
        - $ref: "#/parameters/path-gitlabOrganizationID"
        - $ref: "#/parameters/path-gitlabRepositoryID"
        - $ref: "#/parameters/path-mergeRequestID"
      responses:
        '200':
          description: 'Success'
        '400':
          $ref: '#/responses/invalid-request'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - gitlab-sign

 
  /request-individual-signature:
    post:
      summary: Request for icla sign 
      description: Initiate the icla signing with docusign
      security: [ ]
      operationId: requestIndividualSignature
      parameters:
        - $ref: "#/parameters/x-request-id"
        - name: input
          in: body
          schema:
            $ref: '#/definitions/individual-signature-input'
          required: true
      responses:
        '200':
          description: 'Success'
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/individual-signature-output'
        '400':
          $ref: '#/responses/invalid-request'
        '500':
          $ref: '#/responses/internal-server-error'
      tags:
        - sign

  /signed/individual/{installation_id}/{github_repository_id}/{change_request_id}:
    post:
      summary: Endpoint to receive DocuSign callback for signed documents.
      description: Receives XML data when an individual signs a document in DocuSign.
      security: [ ]
      operationId: iclaCallbackGithub
      consumes:
        - text/xml
      parameters:
        - $ref: "#/parameters/x-request-id"
        - in: header
          name: accept-encoding
          type: string
          required: false
          default: gzip
        - in: header
          name: connection
          type: string
          required: false
          default: Keep-Alive
        - in: header
          name: content-type
          type: string
          required: true
          default: 'text/xml; charset=utf-8'
        - in: header
          name: user-agent
          type: string
          required: false
          default: docusign
        - name: installation_id
          in: path
          required: true
          type: string
        - name: github_repository_id
          in: path
          required: true
          type: string
        - name: change_request_id
          in: path
          required: true
          type: string
        - name: envelopeInformation
          in: body
          required: true
          description: XML payload with DocuSign envelope information
          schema:
            $ref: '#/definitions/DocuSignEnvelopeInformation'
      responses:
        '200':
          description: Successfully received and processed the callback data.
        '400':
          description: Invalid request.
        '415':
          description: Invalid format.
      tags:
        - sign
  
  /signed/gerrit/individual/{user_id}:
    post:
      summary: Endpoint to receive DocuSign callback for signed documents from Gerrit.
      description: Receives XML data when an individual signs a document in DocuSign linked to Gerrit.
      operationId: iclaCallbackGerrit
      security: [ ]
      consumes:
        - text/xml
      parameters:
        - $ref: "#/parameters/x-request-id"
        - name: user_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            additionalProperties: true
      responses:
        '200':
          description: Successfully received and processed the Gerrit callback data.
        '400':
          description: Invalid request.
      tags:
        - sign 
    
  /signed/corporate/{project_id}/{company_id}:
    post:
      summary: Endpoint to receive DocuSign callback for signed corporate documents.
      description: Receives XML data when a corporate entity signs a document in DocuSign associated with a specific project.
      operationId: cclaCallback
      security: [ ]
      consumes:
        - text/xml
      parameters:
        - $ref: "#/parameters/x-request-id"
        - name: project_id
          in: path
          required: true
          type: string
        - name: company_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            additionalProperties: true
      responses:
        '200':
          description: Successfully received and processed the callback data for corporate signatures.
        '400':
          description: Invalid request.
      tags:
        - sign
    
  /signed/gitlab/individual/{user_id}/{organization_id}/{gitlab_repository_id}/{merge_request_id}:
    post:
      summary: Endpoint for DocuSign callback for GitLab individual signatures.
      description: Receives XML data when an individual signs a document in DocuSign linked to GitLab.
      operationId: iclaCallbackGitlab
      security: [ ]
      consumes:
        - text/xml
      parameters:
        - $ref: "#/parameters/x-request-id"
        - name: user_id
          in: path
          required: true
          type: string
        - name: organization_id
          in: path
          required: true
          type: string
        - name: gitlab_repository_id
          in: path
          required: true
          type: string
        - name: merge_request_id
          in: path
          required: true
          type: string
        - name: envelopeInformation
          in: body
          required: true
          description: XML payload with DocuSign envelope information
          schema:
            $ref: '#/definitions/DocuSignEnvelopeInformation'
      responses:
        '200':
          description: Callback data for GitLab successfully received and processed.
        '400':
          description: Invalid request.
      tags:
        - sign
  /cla/authorization:
    get:
      summary: check if LFID is authorized for a CLA Group ID
      description: This endpoint checks if a given LFID is authorized for a specific CLA Group
      operationId: isAuthorized
      security: [ ]
      parameters:
        - $ref: "#/parameters/x-request-id"
        - name: lfid
          in: query
          required: true
          type: string
          description: The Linux Foundation ID user
        - name: claGroupId
          in: query
          required: true
          type: string
          description: The CLA Group ID
      responses:
        '200':
          description: Authorization status of the LFID for the specified CLA Group
          headers:
            x-request-id:
              type: string
              description: The unique request ID value - assigned/set by the API Gateway based on the session
          schema:
            $ref: '#/definitions/lfid-authorized-response'

        '400':
          $ref: '#/responses/invalid-request'

      tags:
          - signatures
       
      

responses:
  unauthorized:
    description: Unauthorized
    headers:
      x-request-id:
        type: string
        description: The unique request ID value - assigned/set by the API Gateway based on the session
    schema:
      $ref: '#/definitions/error-response'
  invalid-request:
    description: Invalid request
    headers:
      x-request-id:
        type: string
        description: The unique request ID value - assigned/set by the API Gateway based on the session
    schema:
      $ref: '#/definitions/error-response'
  forbidden:
    description: Insufficient privilege to execute action
    headers:
      x-request-id:
        type: string
        description: The unique request ID value - assigned/set by the API Gateway based on the session
    schema:
      $ref: '#/definitions/error-response'
  not-found:
    description: Not found
    headers:
      x-request-id:
        type: string
        description: The unique request ID value - assigned/set by the API Gateway based on the session
    schema:
      $ref: '#/definitions/error-response'
  internal-server-error:
    description: Internal server error
    headers:
      x-request-id:
        type: string
        description: The unique request ID value - assigned/set by the API Gateway based on the session
    schema:
      $ref: '#/definitions/error-response'
  service-unavailable:
    description: Service unavailable
    headers:
      x-request-id:
        type: string
        description: The unique request ID value - assigned/set by the API Gateway based on the session
    schema:
      $ref: '#/definitions/error-response'
  conflict:
    description: Duplicate Resource
    headers:
      x-request-id:
        type: string
        description: The unique request ID value - assigned/set by the API Gateway based on the session
    schema:
      $ref: '#/definitions/error-response'
  accepted-request:
    description: Accepted request
    headers:
      x-request-id:
        type: string
        description: The unique request ID value - assigned/set by the API Gateway based on the session
    schema:
      $ref: '#/definitions/success-response'
  unprocessable-entity:
    description: Unprocessable Entity - Validation Failure
    headers:
      x-request-id:
        type: string
        description: The unique request ID value - assigned/set by the API Gateway based on the session
    schema:
      $ref: '#/definitions/error-response'

# Common parameters
parameters:
  pageSize:
    name: pageSize
    description: The maximum number of results per page, value must be a positive integer value
    in: query
    type: integer
    required: false
    minimum: 0
    exclusiveMinimum: true
  returnAllEvents:
    name: returnAllEvents
    description: The optional parameter which would avoid pagination and it will return all data
    in: query
    type: boolean
    required: false
  searchField:
    name: searchField
    description: The optional user name filter
    in: query
    type: string
    required: false
    pattern: '^\w+$'
  searchTerm:
    name: searchTerm
    description: The optional search filter
    in: query
    type: string
    required: false
  fullMatch:
    name: fullMatch
    in: query
    type: boolean
    default: false
    required: false
  nextKey:
    name: nextKey
    description: The next key to scan - used as a page offset for scanning batches of records
    in: query
    type: string
    required: false
    # UUID v4 regex
    # pattern: '[a-f0-9]{8}-?[a-f0-9]{4}-?4[a-f0-9]{3}-?[89ab][a-f0-9]{3}-?[a-f0-9]{12}'
  approved:
    name: approved
    description: The signature approved query parameter. If set with a value of true, the query would return approved signatures. If set with a value of false, the query would return invalidated/disabled signatures.
    in: query
    type: boolean
    required: false
  signed:
    name: signed
    description: The signature signed query parameter. If set with a value of true, the query would return signed signatures. If set with a value of false, the query would return incomplete/unsigned signatures.
    in: query
    type: boolean
    required: false
  sortOrder:
    name: sortOrder
    description: The sort order - either asc or desc
    in: query
    type: string
    required: false
    enum: [ asc, desc ]
  companyName:
    name: companyName
    description: The optional company name filter
    in: query
    type: string
    required: false
    pattern: '[^<>]*' # allow everything except greater than and less than symbols
  userName:
    name: userName
    description: The optional user name filter
    in: query
    type: string
    required: false
    pattern: '^\w+$'
  signatureType:
    name: signatureType
    description: >
      CLA Type query parameter - allows the caller to specify either individual, employee or corporate signature, valid options:
      * `icla` - for individual contributor signature records (individuals not associated with a corporation)
      * `ecla` - for employee contributor signature records (acknowledgements from corporate contributors)
      * `ccla` - for corporate contributor signature records (created by CLA Signatories and managed by CLA Managers)
    in: query
    type: string
    required: false
    enum: [ ccla,ecla,cla ]
  claType:
    name: claType
    description: >
      CLA Type query parameter - allows the caller to specify either individual, employee or corporate signature, valid options:
      * `icla` - for individual contributor signature records (individuals not associated with a corporation)
      * `ecla` - for employee contributor signature records (acknowledgements from corporate contributors)
      * `ccla` - for corporate contributor signature records (created by CLA Signatories and managed by CLA Managers)
    in: query
    type: string
    required: false
    enum: [ ccla,ecla,icla ]
  templateCLAType:
    name: claType
    in: query
    type: string
    required: true
    enum: [ icla, ccla ]
  foundationSFID:
    name: foundationSFID
    description: the Salesforce ID of the Foundation
    in: query
    type: string
    pattern: '^[a-zA-Z0-9]{18}|[a-zA-Z0-9]{15}$' # see: https://stackoverflow.com/questions/9742913/validating-a-salesforce-id
  companyID:
    name: companyID
    description: The internal company ID representing signing entity name instance (EasyCLA)
    in: query
    type: string
  path-claGroupID:
    name: claGroupID
    description: ID of the CLA Group
    in: path
    type: string
    required: true
    pattern: '^[a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?4[a-fA-F0-9]{3}-?[89ab][a-fA-F0-9]{3}-?[a-fA-F0-9]{12}$' # uuidv4
    minLength: 5
    maxLength: 255
  path-foundationSFID:
    name: foundationSFID
    description: the Salesforce ID of the Foundation
    in: path
    type: string
    required: true
    pattern: '^[a-zA-Z0-9]{18}|[a-zA-Z0-9]{15}$' # see: https://stackoverflow.com/questions/9742913/validating-a-salesforce-id
    minLength: 5
    maxLength: 255
  path-projectSFID:
    name: projectSFID
    description: the Salesforce ID of the project
    in: path
    type: string
    required: true
    pattern: '^[a-zA-Z0-9]{18}|[a-zA-Z0-9]{15}$' # see: https://stackoverflow.com/questions/9742913/validating-a-salesforce-id
    minLength: 5
    maxLength: 255
  path-userID:
    name: userID
    description: v1 EasyCLA user Admin ID
    in: path
    type: string
    required: true
    # \w - Any word character (alphanumeric & underscore), dashes, periods
    pattern: '^(\w)([\w\-.])+$'
    minLength: 5
    maxLength: 255
  path-userLFID:
    name: userLFID
    description: LFID of the user
    in: path
    type: string
    required: true
  path-companyID:
    name: companyID
    description: id of the company
    in: path
    type: string
    required: true
    pattern: '^[a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?4[a-fA-F0-9]{3}-?[89ab][a-fA-F0-9]{3}-?[a-fA-F0-9]{12}$' # uuidv4
  path-companySFID:
    name: companySFID
    description: salesforce id of the company
    in: path
    type: string
    required: true
    pattern: '^[a-zA-Z0-9]{18}|[a-zA-Z0-9]{15}$' # see: https://stackoverflow.com/questions/9742913/validating-a-salesforce-id
  path-companyName:
    name: companyName
    description: the company name
    in: path
    type: string
    required: true
    pattern: '[^<>]*' # allow everything except greater than and less than symbols
    minLength: 2
    maxLength: 100
  path-signingEntityName:
    name: signingEntityName
    type: string
    description: Signing Entity Name of the Company
    # Pattern aligns with UI and other platform services including Org Service
    pattern: '[^<>]*' # allow everything except greater than and less than symbols
    minLength: 2
    maxLength: 100
    in: path
    required: true
  path-signatureID:
    name: signatureID
    description: id of the CLA signature
    in: path
    type: string
    required: true
    pattern: '^[a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?4[a-fA-F0-9]{3}-?[89ab][a-fA-F0-9]{3}-?[a-fA-F0-9]{12}$' # uuidv4
    minLength: 5
    maxLength: 255
  path-gitlabOrganizationID:
    name: organizationID
    description: GitLab organization ID
    type: string
    in: path
    required: true
  path-mergeRequestID:
    name: mergeRequestID
    description: GitLab Merge Request identifier
    type: string
    in: path
    required: true
  path-gitlabRepositoryID:
    name: gitlabRepositoryID
    type: string
    description: GitLab Repository/Project identifier
    in: path
    required: true
  gerritHost:
    name: gerritHost
    description: host of the gerrit server
    in: query
    type: string
    # Valid hostname
    format: hostname
    minLength: 3
    maxLength: 255
  x-acl:
    name: X-ACL
    description: The access control list header value encoded as base64 - assigned by the API Gateway based on user/request permissions
    in: header
    type: string
    required: true
    x-example: 'JImlzQWRtaW4iOiB0cnVlLAoJImFsbG93ZWQiOiB0cnVlLAoJImNvbnRleHQiOic3lzdGVtIgp9Cg=='
  authorization:
    name: Authorization
    description: Bearer token
    in: header
    type: string
    required: true
  x-username:
    name: X-USERNAME
    description: The username/LFID value - assigned/set by the API Gateway based on login credentials
    in: header
    type: string
    x-example: 'zachking123'
  x-email:
    name: X-EMAIL
    description: The email value - assigned/set by the API Gateway based on login credentials
    in: header
    type: string
    x-example: 'user@linuxfoundation.org'
  x-request-id:
    name: X-REQUEST-ID
    description: The unique request ID value - assigned/set by the API Gateway based on the login session
    in: header
    type: string
  x-github-event:
    name: X-GITHUB-EVENT
    description: Github event type header, it's sent from Github webhook callback
    in: header
    type: string
  x-hub-signature:
    name: X-HUB-SIGNATURE
    description: Github event signature which is used for validation of the request body
    in: header
    type: string
  x-gitlab-token:
    name: X-Gitlab-Token
    description: Gitlab webhook secret token sent for futher verification
    in: header
    type: string
    required: true

definitions:
  # Common definitions

  version:
    $ref: './common/version.yaml'

  health:
    $ref: './common/health.yaml'

  health-status:
    $ref: './common/health-status.yaml'

  event-list:
    $ref: './common/event-list.yaml'

  event:
    $ref: './common/event.yaml'

  #--------------------------------------
  # Docusign Webhook Payload
  #____________________________________________
  DocuSignEnvelopeInformation:
    type: object
    properties:
      EnvelopeStatus:
        type: object
        properties:
          EnvelopeID:
            type: string
          Status:
            type: string
          RecipientStatuses:
            type: array
            items:
              $ref: '#/definitions/RecipientStatus'      
          FormData:
            type: object
            properties:
              xfdf:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      $ref: '#/definitions/Field'
    xml:
      name: DocuSignEnvelopeInformation

  RecipientStatus:
    type: object
    properties:
      Type:
        type: string
      Email:
        type: string
      UserName:
        type: string
      Status:
        type: string
      ClientUserId:
        type: string
    xml:
      name: RecipientStatus

  Field:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
    xml:
      name: field

  # ---------------------------------------------------------------------------
  # GitHub Definitions
  # ---------------------------------------------------------------------------
  github-activity-input:
    type: object
    required:
      - action
    properties:
      action:
        type: string
    additionalProperties: true

  gitlab-activity-input:
    type: object
    properties:
      object_kind:
        type: string
    additionalProperties: true

  gitlab-trigger-input:
    type: object
    required:
      - gitlab_organization_id
      - gitlab_external_repository_id
      - gitlab_mr_id
    properties:
      gitlab_organization_id:
        type: string
        description: the gitlab organization id to which mr belongs to
      gitlab_external_repository_id:
        type: integer
        description: gitlab project identifier associated with mr
      gitlab_mr_id:
        type: integer
        description: gitlab mr id

  github-repository-input:
    type: object
    required:
      - github_organization_name
      - cla_group_id
    properties:
      repository_github_ids:
        type: array
        items:
          description: the repository external identifier, such as the GitHub ID of the repo
          type: string
          example: '337730995'
      repository_github_id:
        type: string
        description: the repository external identifier, such as the GitHub ID of the repo
        example: '337730995'
      github_organization_name:
        type: string
        description: the repository organization
        example: 'cncf'
      cla_group_id:
        description: CLA Group ID
        $ref: './common/properties/internal-id.yaml'

  github-repository-branch-protection-status-checks:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: check status name
        example: EasyCLA
      enabled:
        type: boolean
        default: false

  github-repository-branch-protection:
    type: object
    required:
      - branch_name
      - protection_enabled
      - enforce_admin
    properties:
      branch_name:
        type: string
      protection_enabled:
        type: boolean
        default: false
      enforce_admin:
        type: boolean
        default: false
      status_checks:
        type: array
        items:
          $ref: '#/definitions/github-repository-branch-protection-status-checks'

  github-repository-branch-protection-input:
    type: object
    properties:
      branch_name:
        type: string
      enforce_admin:
        type: boolean
        default: false
      status_checks:
        type: array
        items:
          $ref: '#/definitions/github-repository-branch-protection-status-checks'

  github-organization:
    $ref: './common/github-organization.yaml'

  github-repository:
    $ref: './common/github-repository.yaml'

  github-create-organization:
    $ref: './common/github-organization-create.yaml'

  github-update-organization:
    $ref: './common/github-organization-update.yaml'

  github-list-repositories:
    $ref: './common/github-repositories-list.yaml'

  # ---------------------------------------------------------------------------
  # GitLab Definitions
  # ---------------------------------------------------------------------------
  gitlab-organization:
    $ref: './common/gitlab-organization.yaml'

  gitlab-create-organization:
    $ref: './common/gitlab-organization-create.yaml'

  gitlab-organization-update:
    $ref: './common/gitlab-organization-update.yaml'

  gitlab-repository:
    $ref: './common/gitlab-repository.yaml'

  gitlab-repositories-list:
    $ref: './common/gitlab-repositories-list.yaml'

  gitlab-repositories-enroll:
    $ref: './common/gitlab-repositories-enroll.yaml'
  
  gitlab-group-member:
    $ref: './common/gitlab-group-member.yaml'
  
  gitlab-group-members-list:
    $ref: './common/gitlab-group-members-list.yaml'

  # ---------------------------------------------------------------------------
  # CLA Group Definitions
  # ---------------------------------------------------------------------------
  cla-groups:
    $ref: './common/cla-groups.yaml'

  cla-group:
    $ref: './common/cla-group.yaml'

  sf-project-summary:
    $ref: './common/sf-project-summary.yaml'

  # ---------------------------------------------------------------------------
  # CLA Template Definitions
  # ---------------------------------------------------------------------------
  template:
    $ref: './common/template.yaml'

  create-cla-group-template:
    $ref: './common/create-cla-group-template.yaml'

  template-pdfs:
    $ref: './common/template-pdfs.yaml'

  user:
    $ref: './common/user.yaml'

  signatures:
    $ref: './common/signatures.yaml'

  signature:
    $ref: './common/signature.yaml'
  
  corporate-signatures:
    $ref: './common/corporate-signatures.yaml'
  
  corporate-signature:
    $ref: './common/corporate-signature.yaml'
  
  approval-item:
    $ref: './common/approval-item.yaml'

  icla-signatures:
    $ref: './common/icla-signatures.yaml'

  icla-signature:
    $ref: './common/icla-signature.yaml'

  approval-list:
    $ref: './common/signature-approval-list.yaml'

  github-org:
    $ref: './common/github-org.yaml'

  gh-org-whitelist:
    $ref: './common/gh-org-whitelist.yaml'

  add-gerrit-input:
    $ref: './common/add-gerrit-input.yaml'

  gerrit-group-response:
    $ref: './common/gerrit-group-response.yaml'

  add-gerrit-user-input:
    $ref: './common/gerrit-user-list.yaml'

  remove-gerrit-user-input:
    $ref: './common/gerrit-user-list.yaml'

  gerrit-repo:
    $ref: './common/gerrit-repo.yaml'

  gerrit-repo-list:
    $ref: './common/gerrit-repo-list.yaml'

  gerrit:
    $ref: './common/gerrit.yaml'

  gerrit-list:
    $ref: './common/gerrit-list.yaml'

  github-repositories-group-by-orgs:
    $ref: './common/github-repositories-group-by-orgs.yaml'

  cla-group-document:
    $ref: './common/cla-group-document.yaml'

  meta-field:
    $ref: './common/meta-field.yaml'

  field:
    $ref: './common/field.yaml'

  github-repository-info:
    $ref: './common/github-repository-info.yaml'

  gitlab-repository-info:
    $ref: './common/gitlab-repository-info.yaml'

  total-count-metrics:
    type: object
    properties:
      individualContributorsCount:
        type: integer
        x-omitempty: false
        example: 10
      contributorsCount:
        type: integer
        x-omitempty: false
        example: 100
      projectsCount:
        type: integer
        x-omitempty: false
        example: 900
      repositoriesCount:
        type: integer
        x-omitempty: false
        example: 1000
      companiesProjectContributionCount:
        type: integer
        x-omitempty: false
        example: 100
      # Omitted the following metrics at the request of stakeholders:
      #corporateContributorsCount:
      #  type: integer
      #  x-omitempty: false
      #claManagersCount:
      #  type: integer
      #  x-omitempty: false
      #companiesCount:
      #  type: integer
      #  x-omitempty: false
      #githubRepositoriesCount:
      #  type: integer
      #  x-omitempty: false
      #gerritRepositoriesCount:
      #  type: integer
      #  x-omitempty: false
      #lfMembersCLACount:
      #  type: integer
      #  x-omitempty: false
      #nonLfMembersCLACount:
      #  type: integer
      #  x-omitempty: false
      createdAt:
        type: string
    title: CLA total metrics

  top-companies:
    type: object
    properties:
      topCompaniesByProjectCount:
        type: array
        items:
          $ref: '#/definitions/company-metric'
      topCompaniesByCorporateContributors:
        type: array
        items:
          $ref: '#/definitions/company-metric'
      topCompaniesByClaManagers:
        type: array
        items:
          $ref: '#/definitions/company-metric'
      averageCompanyProjectCount:
        type: integer
        x-omitempty: false
      averageCompanyCorporateContributors:
        type: integer
        x-omitempty: false
      averageCompanyClaManagers:
        type: integer
        x-omitempty: false

  top-projects:
    type: object
    properties:
      topProjectsByIcla:
        type: array
        items:
          $ref: '#/definitions/project-metric'
      topProjectsByCcla:
        type: array
        items:
          $ref: '#/definitions/project-metric'
      topProjectsByIclaAndCcla:
        type: array
        items:
          $ref: '#/definitions/project-metric'

  company-metric:
    type: object
    properties:
      id:
        type: string
      companyName:
        $ref: './common/properties/company-name.yaml'
      claManagersCount:
        type: integer
        x-omitempty: false
      corporateContributorsCount:
        type: integer
        x-omitempty: false
      projectsCount:
        type: integer
        x-omitempty: false
      createdAt:
        type: string
    title: Company metrics

  company-input:
    type: object
    required:
      - userEmail
      - companyName
      - companyWebsite
    properties:
      companyName:
        $ref: './common/properties/company-name.yaml'
      signingEntityName:
        $ref: './common/properties/company-signing-entity-name.yaml'
      companyWebsite:
        $ref: './common/properties/website.yaml'
        description: the company website
      userEmail:
        $ref: './common/properties/email.yaml'
      note:
        description: 'Optional note associated with the new company request. This information will be attached to the company record.'
        type: string
        maxLength: 256

  company-output:
    type: object
    properties:
      companyName:
        $ref: './common/properties/company-name.yaml'
      signingEntityName:
        $ref: './common/properties/company-signing-entity-name.yaml'
      companyWebsite:
        type: string
      logoURL:
        type: string
      companyID:
        type: string

  lookup:
    type: object
    title: Lookup
    description: Company results from organization service lookup
    properties:
      ID:
        type: string
        description: The unique company ID
        example: "9765"
        pattern: '^(\d+){1,}$'
      Name:
        type: string
        description: The company name, such as "Linux Foundation", "Google LLC" or "23andMe, Inc."
        example: "Linux Foundation"
        pattern: '^([\w\d\s\-\,\.\/]+){2,255}$'
      Link:
        type: string
        description: The company web site URL
        example: "http://www.linuxfoundation.org"
        pattern: '^([\w\d\s\-\,\.\/\:]+){2,255}$'
      Source:
        type: string
        description: >-
          The company account source, such as "Google Natural Search", "Event-Promo", "Direct Mail", or "Tradeshow".
          If the information was found in clearbit, this value will be "clearbit".
        example: "clearbit"
      Industry:
        type: string
        description: >-
          The company industry, such as "Banking" or "Communications"
        example: "Education"
        pattern: '^([\w\d\s\-\,\.]+){2,40}$'
      Sector:
        type: string
        description: >-
          The company industry sector, such as "Information Technology"
        example: "Information Technology"
      Employees:
        type: string
        description: The number of employees of the company
        example: "500 - 4999"
        pattern: '^([\w\d\s\-\,\.\/]+){2,}$'
      signingEntityNames:
        type: array
        description: A list of signing entity names associated with the Company
        items:
          $ref: './common/properties/company-signing-entity-name.yaml'

  cla-manager-distribution:
    type: object
    properties:
      oneClaManager:
        type: integer
        x-omitempty: false
      twoClaManagers:
        type: integer
        x-omitempty: false
      threeClaManagers:
        type: integer
        x-omitempty: false
      fourOrMoreClaManagers:
        type: integer
        x-omitempty: false
      createdAt:
        type: string
    title: CLA manager distribution across companies

  list-project-metric:
    type: object
    properties:
      nextKey:
        type: string
      list:
        type: array
        items:
          $ref: '#/definitions/sf-project-metric'

  company-project-metrics:
    type: object
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/company-project-metric'

  company-project-metric:
    type: object
    properties:
      companyID:
        type: string
        x-omitempty: false
      projectID:
        type: string
        x-omitempty: false
      claManagersCount:
        type: integer
        x-omitempty: false
      contributorsCount:
        type: integer
        x-omitempty: false
      projectName:
        $ref: './common/properties/project-name.yaml'
        x-omitempty: false
      claGroupName:
        $ref: './common/properties/cla-group-name.yaml'
        x-omitempty: false
      companyName:
        $ref: './common/properties/company-name.yaml'
        x-omitempty: false
      projectSFID:
        type: string
        x-omitempty: false

  sf-project-metric:
    type: object
    properties:
      projectExternalId:
        type: string
      list:
        type: array
        items:
          $ref: '#/definitions/project-metric'

  project-metric:
    type: object
    properties:
      id:
        type: string
      externalProjectID:
        type: string
      projectName:
        $ref: './common/properties/project-name.yaml'
      companiesCount:
        type: integer
        x-omitempty: false
      claManagersCount:
        type: integer
        x-omitempty: false
      corporateContributorsCount:
        type: integer
        x-omitempty: false
      individualContributorsCount:
        type: integer
        x-omitempty: false
      totalContributorsCount:
        type: integer
        x-omitempty: false
      repositoriesCount:
        type: integer
        x-omitempty: false
      createdAt:
        type: string
    title: project metrics

  company:
    $ref: './common/company.yaml'

  company-cla-managers:
    type: object
    title: Company CLA Managers
    description: List of CLA Managers for the company
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/company-cla-manager'

  cla-manager-designees:
    type: object
    title: cla manager designees
    description: List of cla manager designee roles for a user
    properties:
      list:
        type: array
        items:
          $ref:
            '#/definitions/cla-manager-designee'


  user-role-status:
    type: object
    title: User Role status
    description: status of LF User checking cla-manager-designee role
    properties:
      lfUsername:
        type: string
      hasRole:
        type: boolean
        default: false
      companySFID:
        type: string

  contributor:
    type: object
    title: Contributor
    description: Contributor association with an org
    properties:
      lf_username:
        type: string
        description: 'the LF username'
        x-omitempty: false
        example: 'john.doe'
      user_sfid:
        type: string
        description: 'the user SalesForce ID'
        x-omitempty: false
      email:
        $ref: './common/properties/email.yaml'
        x-omitempty: false
      assigned_on:
        type: string
        x-omitempty: false
      company_sfid:
        type: string
        description: 'the Organization SalesForce ID'
        x-omitempty: false
        example: 'abc134234adsdf43'
      role:
        type: string
        description: 'The role association with company'
        example: 'contributor'
        x-omitempty: false

  cla-manager-designee:
    type: object
    title: Company CLA Designee
    description: CLA Manager Designee details
    properties:
      lf_username:
        type: string
        description: 'the LF username'
        x-omitempty: false
        example: 'john.doe'
      name:
        type: string
        description: 'name of the user'
        example: 'john'
        x-omitempty: false
      user_sfid:
        type: string
        description: 'the user SalesForce ID'
        x-omitempty: false
      email:
        $ref: './common/properties/email.yaml'
        x-omitempty: false
      type:
        type: string
        x-omitempty: false
        example: 'contact'
      assigned_on:
        type: string
        x-omitempty: false
      company_id:
        $ref: './common/properties/internal-id.yaml'
        description: 'the Company/Organization internal ID'
        x-omitempty: false
      company_sfid:
        $ref: './common/properties/external-id.yaml'
        description: 'the Company/Organization SalesForce ID'
        x-omitempty: false
      project_sfid:
        $ref: './common/properties/external-id.yaml'
        description: 'the project SalesForce ID'
        x-omitempty: false
      project_name:
        $ref: './common/properties/project-name.yaml'
        x-omitempty: false

  company-cla-manager:
    type: object
    title: Company CLA Manager
    description: CLA Managers details
    properties:
      lf_username:
        type: string
        description: "The CLA Manager's LF username"
        x-omitempty: false
        example: 'john.doe'
      name:
        type: string
        description: "The CLA Manager's name"
        x-omitempty: false
        example: 'John Doe'
      user_sfid:
        type: string
        description: "The CLA Manager's user Salesforce ID"
        x-omitempty: false
      email:
        $ref: './common/properties/email.yaml'
        x-omitempty: false
      approved_on:
        type: string
        x-omitempty: false
      added_on:
        type: string
        x-omitempty: false
      project_id:
        $ref: './common/properties/internal-id.yaml'
        description: "The Project ID"
        x-omitempty: false
      project_sfid:
        $ref: './common/properties/external-id.yaml'
        description: "The Project SalesForce ID"
        x-omitempty: false
      project_name:
        $ref: './common/properties/cla-group-name.yaml'
        x-omitempty: false
      cla_group_name:
        $ref: './common/properties/cla-group-name.yaml'
      organization_name:
        $ref: './common/properties/company-name.yaml'
        x-omitempty: false
      signing_entity_name:
        $ref: './common/properties/company-signing-entity-name.yaml'
        x-omitempty: false
      organization_id:
        $ref: './common/properties/internal-id.yaml'
        description: "The internal organization ID"
        x-omitempty: false
      organization_sfid:
        $ref: './common/properties/external-id.yaml'
        description: "The Salesforce organization ID"
        x-omitempty: false

  cla-manager-user:
    type: object
    required:
      - firstName
      - lastName
      - userEmail
    x-nullable: false
    title: CLA Manager User
    description: User object used for CLA Manager requests
    properties:
      firstName:
        type: string
        minLength: 2
        maxLength: 30
      lastName:
        type: string
        minLength: 2
        maxLength: 30
      userEmail:
        $ref: './common/properties/email.yaml'
        description: 'CLA Manager Email'

  enabled-cla-list:
    type: object
    title: Enabled CLA list
    description: List of CLA enabled projects for a specified Foundation
    properties:
      foundationLevelCLA:
        description: Flag indicating whether CLA is signed at Foundation level (true) or Project level (false)
        type: boolean
        x-omitempty: false
      list:
        type: array
        items:
          $ref: '#/definitions/enabled-cla'

  enabled-cla:
    type: object
    title: Project that is CLA enabled
    description: A project description of which is CLA enabled
    properties:
      project_name:
        type: string
        description: the Project Name
        example: "Appium"
        x-omitempty: false
      foundation_sfid:
        type: string
        description: the Project Group (previously Foundation) SFID
        example: "d9f17888888hyxsx4u"
        x-omitempty: false
      project_sfid:
        type: string
        description: the Project SFID
        example: "a2g17000000hyxNABB"
        x-omitempty: false
      project_type:
        type: string
        example: "Project"
        x-omitempty: false
      project_logo:
        type: string
        example: "http://wwwlinuxfoundation.org/logo.gif"
        x-omitempty: false
      ccla_enabled:
        type: boolean
        description: flag to indicate if corporate CLAs are enabled
        default: false
        x-omitempty: false
      icla_enabled:
        type: boolean
        description: flag to indicate if individual CLAs are enabled
        default: false
        x-omitempty: false
      ccla_requires_icla:
        type: boolean
        description: flag to indicate if individual ICLAs should be signed with corporate CLAs are signed
        default: false
        x-omitempty: false

  active-cla-list:
    type: object
    title: Active cla list of the companies
    description: details of the companies active cla
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/active-cla'

  notify-cla-manager-list:
    type: object
    title: CLA Manager list and contributor userID for given company and Project
    description: list of CLA Manager emails and contributor userID
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/notify-cla-manager'
      userID:
        type: string
      companyName:
        $ref: './common/properties/company-name.yaml'
      signingEntityName:
        $ref: './common/properties/company-signing-entity-name.yaml'
      claGroupID:
        title: CLA Group ID
        description: The CLA Group ID
        $ref: './common/properties/internal-id.yaml'
        x-omitempty: false

  notify-cla-manager:
    type: object
    properties:
      email:
        $ref: './common/properties/email.yaml'
        description: CLA Manager email
      name:
        type: string

  company-project-cla-list:
    type: object
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/company-project-cla'

  company-project-cla:
    type: object
    properties:
      signed_cla_list:
        type: array
        items:
          $ref: '#/definitions/active-cla'
      unsigned_project_list:
        type: array
        items:
          $ref: '#/definitions/unsigned_project'

  company-admin-list:
    type: object
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/admin_sf'

  admin_sf:
    type: object
    title: salesforce company admin
    description: salesforce company admin
    properties:
      id:
        type: string
        x-omitempty: false
      username:
        type: string
        x-omitempty: false
      email:
        type: string
        x-omitempty: false


  unsigned_project:
    type: object
    title: unsigned project
    description: details of unsigned project
    properties:
      company_name:
        type: string
        description: The company name
        x-omitempty: false
        example: "The Linux Foundation"
      signing_entity_name:
        type: string
        description: The company signing entity name
        x-omitempty: false
        example: "The Linux Foundation Subsidiary 1"
      signing_entity_id:
        $ref: './common/properties/internal-id.yaml'
      cla_group_id:
        type: string
        x-omitempty: false
        example: "e1e30240-a722-4c82-a648-121681d959c7"
      cla_group_name:
        $ref: './common/properties/cla-group-name.yaml'
        x-omitempty: false
      project_sfid:
        type: string
        x-omitempty: false
        example: "a2g17000000hyxNAAA"
      project_name:
        type: string
        x-omitempty: false
        example: "Appium"
      ccla_enabled:
        type: boolean
        x-omitempty: false
      icla_enabled:
        type: boolean
        x-omitempty: false
      can_sign:
        type: boolean
        x-omitempty: false
        description: if requesting user is cla-designee then this would be true
      sub_projects:
        type: array
        items:
          type: string

  active-cla:
    type: object
    title: Active CLA of the company
    description: Details of the active CLA Group
    properties:
      company_name:
        type: string
        description: The company name
        x-omitempty: false
        example: "The Linux Foundation"
      company_id:
        $ref: './common/properties/internal-id.yaml'
        description: 'the Company ID'
        x-omitempty: false
      company_sfid:
        $ref: './common/properties/external-id.yaml'
        description: 'the Company/Organization SalesForce ID'
        x-omitempty: false
      signing_entity_name:
        type: string
        description: The company signing entity name
        x-omitempty: false
        example: "The Linux Foundation Subsidiary 1"
      signing_entity_id:
        $ref: './common/properties/internal-id.yaml'
      signature_acl:
        $ref: './common/signature-acl.yaml'
      signed_on:
        type: string
        x-omitempty: false
        example: "2019-07-18T11:38:13.144674+0000"
      project_id:
        title: CLA Group ID
        description: The CLA Group/Project ID - here for backwards compatiablity
        $ref: './common/properties/internal-id.yaml'
        x-omitempty: false
      cla_group_id:
        title: CLA Group ID
        description: The CLA Group ID
        $ref: './common/properties/internal-id.yaml'
        x-omitempty: false
      project_sfid:
        $ref: './common/properties/external-id.yaml'
        description: The project SalesForce ID
        x-omitempty: false
      project_name:
        type: string
        description: The project name
        example: "Appium"
        x-omitempty: false
      project_type:
        type: string
        description: "The project type, typically either 'Project Group' (formerly Foundation) or 'Project'"
        example: "Project Group"
        x-omitempty: false
      sub_projects:
        type: array
        description: "The list of sub-projects"
        items:
          type: string
      signatory_name:
        type: string
        example: "John Doe"
        x-omitempty: false
      signature_id:
        $ref: './common/properties/external-id.yaml'
        title: Signature ID
        description: The internal signature ID
        x-omitempty: false
      project_logo:
        type: string
        title: Project Logo
        description: the project logo
        example: "http://wwwlinuxfoundation.org/logo.gif"
        x-omitempty: false
      cla_group_name:
        $ref: './common/properties/cla-group-name.yaml'
        x-omitempty: false
      ccla_url:
        type: string
        x-omitempty: false

  corporate-contributor-list:
    $ref: './common/corporate-contributors-list.yaml'

  corporate-contributor:
    $ref: './common/corporate-contributor.yaml'

  individual-signature-input:
    type: object
    required:
      - project_id
      - user_id
    properties:
      project_id:
        type: string
        example: "e1e30240-a722-4c82-a648-121681d959c7"
      return_url:
        type: string
        example: 'https://corporate.dev.lfcla.com/#/company/eb4d7d71-693f-4047-bf8d-10d0e7764969'
        description: on signing the document, page will get redirected to this url. This is valid only when send_as_email is false
        format: uri
      return_url_type:
        type: string
        example: Gerrit/Github/GitLab. Optional depending on presence of return_url
      user_id:
        type: string
        example: "e1e30240-a722-4c82-a648-121681d959c7"


  corporate-signature-input:
    type: object
    required:
      - project_sfid
      - company_sfid
    properties:
      project_sfid:
        type: string
        example: 'a0941000005ouJFAAY'
        description: salesforce id of the project
      company_sfid:
        type: string
        example: '0014100000Te0fMAAR'
        description: salesforce id of the company
      signing_entity_name:
        type: string
        example: 'My Company Signing Entity, Ltd.'
        description: the corporate signing entity name used for signing the CLA, may be the same as the company name or a different value
      send_as_email:
        type: boolean
        example: false
        description: send signing request as email. This should be set to true when requestor is not signatory.
      authority_name:
        type: string
        example: "Derk Miyamoto"
        description: the name of the CLA signatory
        minLength: 2
        maxLength: 255
      authority_email:
        $ref: './common/properties/email.yaml'
        description: the email of the CLA Signatory
      return_url:
        type: string
        example: 'https://corporate.dev.lfcla.com/#/company/eb4d7d71-693f-4047-bf8d-10d0e7764969'
        description: on signing the document, page will get redirected to this url. This is valid only when send_as_email is false
        format: uri

  corporate-signature-output:
    type: object
    properties:
      signature_id:
        type: string
        description: id of the signature
      sign_url:
        type: string
        description: signing url

  individual-signature-output:
    type: object
    properties:
      signature_id:
        type: string
        description: id of the signature
      sign_url:
        type: string
        description: signing url
      user_id:
        type: string
        description: easyCLA user identification
      project_id:
        type: string
        description: clagroup ID

  signed_document:
    type: object
    properties:
      signature_id:
        type: string
        description: id of the signature
      signed_cla_url:
        type: string
        description: pdf url of the signed agreement

  create-cla-group-input:
    type: object
    required:
      - cla_group_name
      - ccla_enabled
      - ccla_requires_icla
      - icla_enabled
      - foundation_sfid
      - template_fields
    properties:
      cla_group_name:
        $ref: './common/properties/cla-group-name.yaml'
      cla_group_description:
        $ref: './common/properties/cla-group-description.yaml'
      ccla_enabled:
        type: boolean
        example: true
        description: flag to indicate if ccla is enabled
      ccla_requires_icla:
        type: boolean
        example: true
        description: flag to indicate if corporate contributors requires to sign icla
      icla_enabled:
        type: boolean
        example: true
        description: flag to indicate if icla is enabled
      foundation_sfid:
        type: string
        example: 'a09410000182dD2AAI'
        description: foundation sfid under which this cla group is created
      project_sfid_list:
        description: list of projects under foundation for which this cla group is created
        type: array
        items:
          type: string
          example: 'a092M00001IV3znQAD'
      template_fields:
        description: template variables using which icla/ccla template will be created
        $ref: '#/definitions/create-cla-group-template'

  update-cla-group-input:
    type: object
    properties:
      cla_group_name:
        $ref: './common/properties/cla-group-name.yaml'
      cla_group_description:
        $ref: './common/properties/cla-group-description.yaml'

  cla-group-list-summary:
    type: object
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/cla-group-summary'

  cla-group-summary:
    $ref: './common/cla-group-summary.yaml'
  
  document-tab:
    $ref: './common/document-tab.yaml'

  cla-group-project:
    type: object
    properties:
      project_sfid:
        type: string
        description: salesforce id of the project in cla-group
        example: 'a092M00001IV3znQAD'
        x-omitempty: false
      project_name:
        type: string
        description: salesforce name of the project in cla-group
        example: 'Academy Software Foundation'
        x-omitempty: false
      repositories_count:
        description: repositories added from this project into cla-group
        type: integer
        x-omitempty: false

  cla-group-validation-request:
    type: object
    properties:
      cla_group_name:
        $ref: './common/properties/cla-group-name.yaml'
        x-omitempty: true
        x-nullable: true
      cla_group_description:
        $ref: './common/properties/cla-group-description.yaml'
        x-omitempty: true
        x-nullable: true

  cla-group-validation-response:
    type: object
    properties:
      valid:
        type: boolean
        example: true
        description: returns true if the CLA Group validates, false otherwise
        x-omitempty: false
      validation_errors:
        x-omitempty: true
        description: list of CLA Group validation errors
        type: array
        items:
          type: string
          example: 'duplicate CLA Group name'

  foundation-mapping-list:
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/foundation-mapping'

  foundation-mapping:
    type: object
    properties:
      foundation_sfid:
        type: string
      cla_groups:
        type: array
        items:
          $ref: '#/definitions/cla-group-projects'

  cla-group-projects:
    type: object
    properties:
      cla_group_id:
        type: string
      project_sfid_list:
        type: array
        items:
          type: string

  gitlab-organizations:
    $ref: './common/gitlab-organizations.yaml'
  
  ecla-auto-create:
    type: object
    properties:
      auto_create_ecla:
        type: boolean
        description: flag to indicate if the product should automatically create an employee acknowledgement for a given user when the CLA manager adds the user to the email, GitLab username, or GitLab username approval list
        example: true

  project-github-organizations:
    type: object
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/project-github-organization'

  project-github-organization:
    type: object
    properties:
      auto_enabled:
        type: boolean
        description: Flag to indicate if auto-enabled flag should be enabled. Organizations with auto-enable turned on will automatically include any new repositories to the EasyCLA configuration.
        x-omitempty: false
      autoEnableCLAGroupID:
        type: string
        description: The CLA Group ID which is attached to the auto-enabled flag
      autoEnabledCLAGroupName:
        type: string
        description: The CLA Group name which is attached to the auto-enabled flag
      branchProtectionEnabled:
        type: boolean
        description: Flag to indicate if this GitHub Organization is configured to automatically setup branch protection on CLA enabled repositories.
        x-omitempty: false
      installationURL:
        type: string
        x-nullable: true
        example: "https://github.com/organizations/deal-test-org-2/settings/installations/1235464"
        format: uri
      github_organization_name:
        type: string
        description: The GitHub Organization name
        example: "kubernetes"
        # Pattern aligns with UI and other platform services including Org Service
        # \w Any word character (alphanumeric & underscore), dashes, periods
        pattern: '^([\w\-\.]+){2,255}$'
        minLength: 2
        maxLength: 255
      connection_status:
        type: string
        enum:
          - connected
          - partial_connection
          - connection_failure
          - no_connection
      repositories:
        type: array
        items:
          $ref: '#/definitions/project-github-repository'

  project-github-repository:
    type: object
    properties:
      repository_id:
        type: string
        x-omitempty: false
      repository_github_id:
        type: integer
      repository_name:
        type: string
        x-omitempty: false
      cla_group_id:
        type: string
        x-omitempty: false
      project_id:
        type: string
        x-omitempty: false
      parent_project_id:
        type: string
        x-omitempty: false
      enabled:
        type: boolean
        x-omitempty: false
      connection_status:
        type: string
        enum:
          - connected
          - connection_failure

  gitlab-project-organizations:
    $ref: './common/gitlab-project-organizations.yaml'

  gitlab-project-organization:
    $ref: './common/gitlab-project-organization.yaml'

  gitlab-project-repository:
    $ref: './common/gitlab-project-repository.yaml'

  url-object:
    type: object
    properties:
      url:
        type: string
        x-omitempty: false

  error-response:
    type: object
    x-nullable: false
    title: Error Response
    description: Standard error format
    properties:
      Code:
        description: The error code
        example: "404"
        type: string
      Message:
        description: The error message
        example: "unable to find project Acme, Inc."
        type: string
      x-request-id:
        description: The unique request ID value - assigned/set by the API Gateway or the API based on the login session
        example: 'b1e86e26-d8c8-4fd8-9f8d-5c723d5dac9f'
        type: string

  success-response:
    type: object
    x-nullable: false
    title: Success Response
    description: Standard success format
    properties:
      Code:
        description: The success code
        example: "202"
        type: string
      Message:
        description: The success message
        example: "unable to find project Acme, Inc."
        type: string
      x-request-id:
        description: The unique request ID value - assigned/set by the API Gateway or the API based on the login session
        example: 'b1e86e26-d8c8-4fd8-9f8d-5c723d5dac9f'
        type: string
  
  lfid-authorized-response:
    type: object
    properties:
      authorized:
        type: boolean
        description: Indicates if the LFID is authorized for the CLA Group.
        x-omitempty: false
      lfid:
        type: string
        description: The LFID that was checked
      claGroupId:
        type: string
        description: The ID of the Group
      companyID:
        type: string
        description: The ID of the company associated with the User (optional)
      CCLARequiresICLA:
        type: boolean
        description: Flag ensuring user signs ICLA and is acknowledged the company
        x-omitempty: false
      companyAffiliation:
        type: boolean
        description: User is affiliated with a company (use case when user has no companyID attribute)
        x-omitempty: false
      ICLA:
        type: boolean
        description: User has an ICLA signature
        x-omitempty: false
      CCLA:
        type: boolean
        description: Flag to indicate if user has been company acknowledged and approved
        x-omitempty: false

      

